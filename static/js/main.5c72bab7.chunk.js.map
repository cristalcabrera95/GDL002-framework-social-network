{"version":3,"sources":["Components/Login/LoginGoogle.js","Components/Login/LoginBox.js","Components/Login/RegisterBox.js","Components/Login/SingIn.js","App.js","serviceWorker.js","index.js"],"names":["LoginGoogle","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","handleAuth","bind","assertThisInitialized","handleLogout","_this2","firebase","auth","onAuthStateChanged","setState","provider","GoogleAuthProvider","signInWithPopup","then","result","console","log","concat","email","catch","error","code","message","signOut","react_default","a","createElement","src","photoURL","alt","displayName","onClick","className","myfunction","renderLoginButton","Component","LoginBox","props","e","htmlFor","type","name","placeholder","submitLogin","LoginGoogle_LoginGoogle","RegisterBox","submitRegister","document","getElementById","value","password","createUserWithEmailAndPassword","errorCode","errorMessage","id","SingIn","isLoginOpen","isRegisterOpen","showLoginBox","showRegisterBox","LoginBox_LoginBox","RegisterBox_RegisterBox","App","SingIn_SingIn","Boolean","window","location","hostname","match","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c72bab7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default class LoginGoogle extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: null\r\n    };\r\n    this.handleAuth = this.handleAuth.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n  componentWillMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ user });\r\n    });\r\n  }\r\n\r\n  handleAuth() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(result => console.log(`${result.user.email} ha iniciado sesion`))\r\n      .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n  }\r\n\r\n  handleLogout() {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(result => console.log(`${result.user.email} ha salido`))\r\n      .catch(error => console.log(`Error ${error.code}: ${error.message}`));\r\n  }\r\n\r\n  renderLoginButton() {\r\n    if (this.state.user) {\r\n      return (\r\n        <div>\r\n          <img\r\n            src={this.state.user.photoURL}\r\n            alt={this.state.user.displayName}\r\n          />\r\n          <h2>Hola que pasa{this.state.user.displayName}</h2>\r\n          <button onClick={this.handleLogout}>Salir</button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"googleButton\" onClick={this.handleAuth}>\r\n          <img\r\n            className=\"google\"\r\n            src=\"https://lh3.googleusercontent.com/f_OBGp2aJzHAmbJy8L_vUZhyoGdEBokTmocv5WFo1RdLUXRZ766Gz9ouQUVl8KXE7K8wOMgqiU3YMiT5TJSu1KJNDIla-s4M3h74zu8GW3r_W6zfVLMONvlAhOVEQv7K5JUEZFKmq-kzBp1_PxTaqrvVzWZpRSfaLh6gus7aSYtp4FMLOZk01QZdwCnpe8Z31GlR2HQqUW2irhTvPtfSZpBsh0XUaxaoakiqb7uzu6hroW9vKwlTMqiJppToVehFNez4Mqs34UlH5OqEH8uYTJyOJNc8lQlAEJzyVQ14t9dUZ3Ykz7EZLCnrgqbEX3AT9sYnkQRFoAofxuEL8mvFHiZQVDv5KlVxBAa77Od2IuI97q9Gasx3IEhWXNUdgsvAww6OvfnIBlro1V8CVQXvutjl2k57QwALoUQQj2g5FcaHlIsX228qOFZ2XCQ6kWytuBd_4z07nhBe8TGiQiihj_Sj4k3WL1YWtkKeKr7i3avXauzzk4ElsVTbX6e3IdN3VvMk6UKZ-3spIyLrIAZVLq0LnMKZhY8XF24UYwHi8jQ4HRQUombvNeOHKahARo6ho0e4-y1a7F6zmKFb-xwlM6dA-oNWVpW2I1picy2vsgCoby5e-7mbbGZUMYDmbtsrztu3nav2QFfYUHMa0-yb0Aed9kMx3TNG8els9T91vFTOGOfXuYQZWyKE5oVwf8P0kyKWJ7jSXKT8kVsqkQ=w191-h46-no\"\r\n            alt=\"my imagen\"\r\n            onClick={this.myfunction}\r\n          />\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderLoginButton()}</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport LoginGoogle from './LoginGoogle'\r\n\r\nexport default class LoginBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n      }\r\n    \r\n      submitLogin(e) {}\r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"inner-container\">\r\n            <div className=\"header\">\r\n              Login\r\n            </div>\r\n            <div className=\"box\">\r\n    \r\n              <div className=\"input-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  className=\"login-input\"\r\n                  placeholder=\"Username\"/>\r\n              </div>\r\n    \r\n              <div className=\"input-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"login-input\"\r\n                  placeholder=\"Password\"/>\r\n              </div>\r\n    \r\n              <button\r\n                type=\"button\"\r\n                className=\"login-btn\"\r\n                onClick={this\r\n                .submitLogin\r\n                .bind(this)}>Login</button>\r\n                <LoginGoogle/>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n","import React, { Component } from 'react';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nexport default class RegisterBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.submitRegister = this.submitRegister.bind(this);\r\n      };\r\n\r\n      submitRegister() {\r\n        var email = document.getElementById('email').value;\r\n        var password = document.getElementById('password').value;\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .catch(function(error) {\r\n          // Handle Errors here.\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          console.log(errorCode, errorMessage);\r\n          \r\n          // ...\r\n        });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"inner-container\">\r\n            <div className=\"header\">\r\n              Register\r\n            </div>\r\n            <div className=\"box\">\r\n    \r\n              <div className=\"input-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"User\"\r\n                  name=\"username\"\r\n                  className=\"login-input\"\r\n                  placeholder=\"Username\"/>\r\n              </div>\r\n    \r\n              <div className=\"input-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input \r\n                type=\"text\" \r\n                id=\"email\"\r\n                name=\"email\" \r\n                className=\"login-input\" \r\n                placeholder=\"Email\"/>\r\n              </div>\r\n    \r\n              <div className=\"input-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  className=\"login-input\"\r\n                  placeholder=\"Password\"/>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"login-btn\" \r\n                onClick ={this.submitRegister}\r\n                >Register</button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LoginBox from './LoginBox';\r\nimport RegisterBox from './RegisterBox';\r\nimport \"./SingInCss.css\";\r\n\r\nexport default class SingIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoginOpen: true,\r\n      isRegisterOpen: false\r\n    };\r\n  }\r\n  showLoginBox() {\r\n    this.setState({isLoginOpen: true, isRegisterOpen: false});\r\n  }\r\n\r\n  showRegisterBox() {\r\n    this.setState({isRegisterOpen: true, isLoginOpen: false});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"root-container\">\r\n        <h2 className='titlered'>Social Pet</h2>\r\n        <img className='logoVet' src='https://lh3.googleusercontent.com/VmjQL8hLsaRopwgInMx1sDoscfIypfIIonDk7ec3dCpoUQSsfO205pCZQDa2Pnaoo3jXZBbR1fDeVSfcNhljmt99OTC6g7dTHLRNdt31-FMhT1sBkzp11IlOr1LDd8uyPUXfievh_z5c3Aj45lA4IO4oVGdOFxKfK-bsHcTGmlRSXNdAqTIMn-dX6vpqx_iI7jrJE-MXhhSFEOdr7DEm_-lqwMCQ8_auTL-cvFdh9jV1v62xu7li9fy-0qW5gbxCFw_-aoxB4t0dT1npZPmzU1dMuXUCZT0DoryQSsF24Ri9YdyTDwQdbP_6UCHMPVmMGvNIYtrse3j-xnhzBm6Gq0EpLU8tD2ngMINkfrgDdXMTcBoI_tAGv3husUviT7bbuBcBZvDVxOpqPvs2SykdLawxtytnPAkYU7wqu3O4yA6X36IoFJ3zG4ANE5buoTtt7liFL5DQSgzsZqYM3VAcRlw5BAYcNexlKmw2KqUxs-w0QMhdCmPDDjlMN-ShxRXGRB8aS2ydmZAwVZ5usd5p9P2JiZxgwLPFQqGATZk7zD4vecF8gKclWnyEpeAditDxHRE0CzkEaAtRKq4t7u4QTbKGtfS_UlBCWRw7mCB6DYcJ6709Ou5-WupYi3vfF5awnpbLHtwhZih9igG3Kk4QcFfmVCaVDtgzDFI2bCKGolA2zYalprjc5eX24vfs03Eh3h7rBDwnFIXE5sllrw=s500-no' alt='mylogo'></img>\r\n        <div className=\"box-controller\">\r\n       <div\r\n         className={\"controller \" + (this.state.isLoginOpen\r\n         ? \"selected-controller\"\r\n         : \"\")}\r\n         onClick={this\r\n         .showLoginBox\r\n         .bind(this)}>\r\n         Login\r\n       </div>\r\n       <div\r\n         className={\"controller \" + (this.state.isRegisterOpen\r\n         ? \"selected-controller\"\r\n         : \"\")}\r\n         onClick={this\r\n         .showRegisterBox\r\n         .bind(this)}>\r\n         Register\r\n       </div>\r\n     </div>\r\n        {this.state.isLoginOpen && <LoginBox />}\r\n        {this.state.isRegisterOpen && <RegisterBox />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport SingIn from './Components/Login/SingIn';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SingIn/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfirebase.initializeApp({\n   apiKey: process.env.REACT_APP_API_KEY,\n   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n   databaseURL: process.env.REACT_APP_DATABASE_URL,\n   projectId: process.env.REACT_APP_PROJECT_ID,\n   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n   messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n   appId: process.env.REACT_APP_APP_ID\n});\nReactDOM.render(\n<App />, \ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}